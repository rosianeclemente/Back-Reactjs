{"ast":null,"code":"const Transaction = require('../../../execution/transaction');\n\nclass Transaction_Sqlite extends Transaction {\n  begin(conn) {\n    // SQLite doesn't really support isolation levels, it is serializable by\n    // default and so we override it to ignore isolation level.\n    // There is a `PRAGMA read_uncommitted = true;`, but that's probably not\n    // what the user wants\n    if (this.isolationLevel) {\n      this.client.logger.warn('sqlite3 only supports serializable transactions, ignoring the isolation level param');\n    }\n\n    return this.query(conn, 'BEGIN;');\n  }\n\n}\n\nmodule.exports = Transaction_Sqlite;","map":{"version":3,"sources":["/home/rosiane/Projeto-completo/back/node_modules/knex/lib/dialects/sqlite3/execution/sqlite-transaction.js"],"names":["Transaction","require","Transaction_Sqlite","begin","conn","isolationLevel","client","logger","warn","query","module","exports"],"mappings":"AAAA,MAAMA,WAAW,GAAGC,OAAO,CAAC,gCAAD,CAA3B;;AAEA,MAAMC,kBAAN,SAAiCF,WAAjC,CAA6C;AAC3CG,EAAAA,KAAK,CAACC,IAAD,EAAO;AACV;AACA;AACA;AACA;AACA,QAAI,KAAKC,cAAT,EAAyB;AACvB,WAAKC,MAAL,CAAYC,MAAZ,CAAmBC,IAAnB,CACE,qFADF;AAGD;;AACD,WAAO,KAAKC,KAAL,CAAWL,IAAX,EAAiB,QAAjB,CAAP;AACD;;AAZ0C;;AAe7CM,MAAM,CAACC,OAAP,GAAiBT,kBAAjB","sourcesContent":["const Transaction = require('../../../execution/transaction');\n\nclass Transaction_Sqlite extends Transaction {\n  begin(conn) {\n    // SQLite doesn't really support isolation levels, it is serializable by\n    // default and so we override it to ignore isolation level.\n    // There is a `PRAGMA read_uncommitted = true;`, but that's probably not\n    // what the user wants\n    if (this.isolationLevel) {\n      this.client.logger.warn(\n        'sqlite3 only supports serializable transactions, ignoring the isolation level param'\n      );\n    }\n    return this.query(conn, 'BEGIN;');\n  }\n}\n\nmodule.exports = Transaction_Sqlite;\n"]},"metadata":{},"sourceType":"script"}