{"ast":null,"code":"const {\n  tokenize\n} = require('./tokenizer');\n\nconst {\n  s,\n  a,\n  m,\n  o,\n  l,\n  n,\n  t,\n  e,\n  f\n} = require('./parser-combinator');\n\nconst TOKENS = {\n  keyword: /(?:ABORT|ACTION|ADD|AFTER|ALL|ALTER|ALWAYS|ANALYZE|AND|AS|ASC|ATTACH|AUTOINCREMENT|BEFORE|BEGIN|BETWEEN|BY|CASCADE|CASE|CAST|CHECK|COLLATE|COLUMN|COMMIT|CONFLICT|CONSTRAINT|CREATE|CROSS|CURRENT|CURRENT_DATE|CURRENT_TIME|CURRENT_TIMESTAMP|DATABASE|DEFAULT|DEFERRED|DEFERRABLE|DELETE|DESC|DETACH|DISTINCT|DO|DROP|END|EACH|ELSE|ESCAPE|EXCEPT|EXCLUSIVE|EXCLUDE|EXISTS|EXPLAIN|FAIL|FILTER|FIRST|FOLLOWING|FOR|FOREIGN|FROM|FULL|GENERATED|GLOB|GROUP|GROUPS|HAVING|IF|IGNORE|IMMEDIATE|IN|INDEX|INDEXED|INITIALLY|INNER|INSERT|INSTEAD|INTERSECT|INTO|IS|ISNULL|JOIN|KEY|LAST|LEFT|LIKE|LIMIT|MATCH|MATERIALIZED|NATURAL|NO|NOT|NOTHING|NOTNULL|NULL|NULLS|OF|OFFSET|ON|OR|ORDER|OTHERS|OUTER|OVER|PARTITION|PLAN|PRAGMA|PRECEDING|PRIMARY|QUERY|RAISE|RANGE|RECURSIVE|REFERENCES|REGEXP|REINDEX|RELEASE|RENAME|REPLACE|RESTRICT|RETURNING|RIGHT|ROLLBACK|ROW|ROWS|SAVEPOINT|SELECT|SET|TABLE|TEMP|TEMPORARY|THEN|TIES|TO|TRANSACTION|TRIGGER|UNBOUNDED|UNION|UNIQUE|UPDATE|USING|VACUUM|VALUES|VIEW|VIRTUAL|WHEN|WHERE|WINDOW|WITH|WITHOUT)(?=\\s+|-|\\(|\\)|;|\\+|\\*|\\/|%|==|=|<=|<>|<<|<|>=|>>|>|!=|,|&|~|\\|\\||\\||\\.)/,\n  id: /\"[^\"]*(?:\"\"[^\"]*)*\"|`[^`]*(?:``[^`]*)*`|\\[[^[\\]]*\\]|[a-z_][a-z0-9_$]*/,\n  string: /'[^']*(?:''[^']*)*'/,\n  blob: /x'(?:[0-9a-f][0-9a-f])+'/,\n  numeric: /(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e(?:\\+|-)?\\d+)?|0x[0-9a-f]+/,\n  variable: /\\?\\d*|[@$:][a-z0-9_$]+/,\n  operator: /-|\\(|\\)|;|\\+|\\*|\\/|%|==|=|<=|<>|<<|<|>=|>>|>|!=|,|&|~|\\|\\||\\||\\./,\n  _ws: /\\s+/\n};\n\nfunction parseCreateTable(sql) {\n  const result = createTable({\n    input: tokenize(sql, TOKENS)\n  });\n\n  if (!result.success) {\n    throw new Error(`Parsing CREATE TABLE failed at [${result.input.slice(result.index).map(t => t.text).join(' ')}] of \"${sql}\"`);\n  }\n\n  return result.ast;\n}\n\nfunction parseCreateIndex(sql) {\n  const result = createIndex({\n    input: tokenize(sql, TOKENS)\n  });\n\n  if (!result.success) {\n    throw new Error(`Parsing CREATE INDEX failed at [${result.input.slice(result.index).map(t => t.text).join(' ')}] of \"${sql}\"`);\n  }\n\n  return result.ast;\n}\n\nfunction createTable(ctx) {\n  return s([t({\n    text: 'CREATE'\n  }, v => null), temporary, t({\n    text: 'TABLE'\n  }, v => null), exists, schema, table, t({\n    text: '('\n  }, v => null), columnDefinitionList, tableConstraintList, t({\n    text: ')'\n  }, v => null), rowid, f], v => Object.assign({}, ...v.filter(x => x !== null)))(ctx);\n}\n\nfunction temporary(ctx) {\n  return a([t({\n    text: 'TEMP'\n  }), t({\n    text: 'TEMPORARY'\n  }), e], v => ({\n    temporary: v !== null\n  }))(ctx);\n}\n\nfunction rowid(ctx) {\n  return o(s([t({\n    text: 'WITHOUT'\n  }), t({\n    text: 'ROWID'\n  })]), v => ({\n    rowid: v !== null\n  }))(ctx);\n}\n\nfunction columnDefinitionList(ctx) {\n  return a([s([columnDefinition, t({\n    text: ','\n  }), columnDefinitionList], v => ({\n    columns: [v[0]].concat(v[2].columns)\n  })), s([columnDefinition], v => ({\n    columns: [v[0]]\n  }))])(ctx);\n}\n\nfunction columnDefinition(ctx) {\n  return s([s([identifier], v => ({\n    name: v[0]\n  })), typeName, columnConstraintList], v => Object.assign({}, ...v))(ctx);\n}\n\nfunction typeName(ctx) {\n  return o(s([m(t({\n    type: 'id'\n  })), a([s([t({\n    text: '('\n  }), signedNumber, t({\n    text: ','\n  }), signedNumber, t({\n    text: ')'\n  })], v => `(${v[1]}, ${v[3]})`), s([t({\n    text: '('\n  }), signedNumber, t({\n    text: ')'\n  })], v => `(${v[1]})`), e])], v => `${v[0].join(' ')}${v[1] || ''}`), v => ({\n    type: v\n  }))(ctx);\n}\n\nfunction columnConstraintList(ctx) {\n  return o(m(columnConstraint), v => ({\n    constraints: Object.assign({\n      primary: null,\n      notnull: null,\n      null: null,\n      unique: null,\n      check: null,\n      default: null,\n      collate: null,\n      references: null,\n      as: null\n    }, ...(v || []))\n  }))(ctx);\n}\n\nfunction columnConstraint(ctx) {\n  return a([primaryColumnConstraint, notnullColumnConstraint, nullColumnConstraint, uniqueColumnConstraint, checkColumnConstraint, defaultColumnConstraint, collateColumnConstraint, referencesColumnConstraint, asColumnConstraint])(ctx);\n}\n\nfunction primaryColumnConstraint(ctx) {\n  return s([constraintName, t({\n    text: 'PRIMARY'\n  }, v => null), t({\n    text: 'KEY'\n  }, v => null), order, conflictClause, autoincrement], v => ({\n    primary: Object.assign({}, ...v.filter(x => x !== null))\n  }))(ctx);\n}\n\nfunction autoincrement(ctx) {\n  return o(t({\n    text: 'AUTOINCREMENT'\n  }), v => ({\n    autoincrement: v !== null\n  }))(ctx);\n}\n\nfunction notnullColumnConstraint(ctx) {\n  return s([constraintName, t({\n    text: 'NOT'\n  }, v => null), t({\n    text: 'NULL'\n  }, v => null), conflictClause], v => ({\n    notnull: Object.assign({}, ...v.filter(x => x !== null))\n  }))(ctx);\n}\n\nfunction nullColumnConstraint(ctx) {\n  return s([constraintName, t({\n    text: 'NULL'\n  }, v => null), conflictClause], v => ({\n    null: Object.assign({}, ...v.filter(x => x !== null))\n  }))(ctx);\n}\n\nfunction uniqueColumnConstraint(ctx) {\n  return s([constraintName, t({\n    text: 'UNIQUE'\n  }, v => null), conflictClause], v => ({\n    unique: Object.assign({}, ...v.filter(x => x !== null))\n  }))(ctx);\n}\n\nfunction checkColumnConstraint(ctx) {\n  return s([constraintName, t({\n    text: 'CHECK'\n  }, v => null), t({\n    text: '('\n  }, v => null), s([expression], v => ({\n    expression: v[0]\n  })), t({\n    text: ')'\n  }, v => null)], v => ({\n    check: Object.assign({}, ...v.filter(x => x !== null))\n  }))(ctx);\n}\n\nfunction defaultColumnConstraint(ctx) {\n  return s([constraintName, t({\n    text: 'DEFAULT'\n  }, v => null), a([s([t({\n    text: '('\n  }), expression, t({\n    text: ')'\n  })], v => ({\n    value: v[1],\n    expression: true\n  })), s([literalValue], v => ({\n    value: v[0],\n    expression: false\n  })), s([signedNumber], v => ({\n    value: v[0],\n    expression: false\n  }))])], v => ({\n    default: Object.assign({}, ...v.filter(x => x !== null))\n  }))(ctx);\n}\n\nfunction collateColumnConstraint(ctx) {\n  return s([constraintName, t({\n    text: 'COLLATE'\n  }, v => null), t({\n    type: 'id'\n  }, v => ({\n    collation: v.text\n  }))], v => ({\n    collate: Object.assign({}, ...v.filter(x => x !== null))\n  }))(ctx);\n}\n\nfunction referencesColumnConstraint(ctx) {\n  return s([constraintName, s([foreignKeyClause], v => v[0].references)], v => ({\n    references: Object.assign({}, ...v.filter(x => x !== null))\n  }))(ctx);\n}\n\nfunction asColumnConstraint(ctx) {\n  return s([constraintName, o(s([t({\n    text: 'GENERATED'\n  }), t({\n    text: 'ALWAYS'\n  })]), v => ({\n    generated: v !== null\n  })), t({\n    text: 'AS'\n  }, v => null), t({\n    text: '('\n  }, v => null), s([expression], v => ({\n    expression: v[0]\n  })), t({\n    text: ')'\n  }, v => null), a([t({\n    text: 'STORED'\n  }), t({\n    text: 'VIRTUAL'\n  }), e], v => ({\n    mode: v ? v.toUpperCase() : null\n  }))], v => ({\n    as: Object.assign({}, ...v.filter(x => x !== null))\n  }))(ctx);\n}\n\nfunction tableConstraintList(ctx) {\n  return o(m(s([t({\n    text: ','\n  }), tableConstraint], v => v[1])), v => ({\n    constraints: v || []\n  }))(ctx);\n}\n\nfunction tableConstraint(ctx) {\n  return a([primaryTableConstraint, uniqueTableConstraint, checkTableConstraint, foreignTableConstraint])(ctx);\n}\n\nfunction primaryTableConstraint(ctx) {\n  return s([constraintName, t({\n    text: 'PRIMARY'\n  }, v => null), t({\n    text: 'KEY'\n  }, v => null), t({\n    text: '('\n  }, v => null), indexedColumnList, t({\n    text: ')'\n  }, v => null), conflictClause], v => Object.assign({\n    type: 'PRIMARY KEY'\n  }, ...v.filter(x => x !== null)))(ctx);\n}\n\nfunction uniqueTableConstraint(ctx) {\n  return s([constraintName, t({\n    text: 'UNIQUE'\n  }, v => null), t({\n    text: '('\n  }, v => null), indexedColumnList, t({\n    text: ')'\n  }, v => null), conflictClause], v => Object.assign({\n    type: 'UNIQUE'\n  }, ...v.filter(x => x !== null)))(ctx);\n}\n\nfunction conflictClause(ctx) {\n  return o(s([t({\n    text: 'ON'\n  }), t({\n    text: 'CONFLICT'\n  }), a([t({\n    text: 'ROLLBACK'\n  }), t({\n    text: 'ABORT'\n  }), t({\n    text: 'FAIL'\n  }), t({\n    text: 'IGNORE'\n  }), t({\n    text: 'REPLACE'\n  })])], v => v[2]), v => ({\n    conflict: v ? v.toUpperCase() : null\n  }))(ctx);\n}\n\nfunction checkTableConstraint(ctx) {\n  return s([constraintName, t({\n    text: 'CHECK'\n  }, v => null), t({\n    text: '('\n  }, v => null), s([expression], v => ({\n    expression: v[0]\n  })), t({\n    text: ')'\n  }, v => null)], v => Object.assign({\n    type: 'CHECK'\n  }, ...v.filter(x => x !== null)))(ctx);\n}\n\nfunction foreignTableConstraint(ctx) {\n  return s([constraintName, t({\n    text: 'FOREIGN'\n  }, v => null), t({\n    text: 'KEY'\n  }, v => null), t({\n    text: '('\n  }, v => null), columnNameList, t({\n    text: ')'\n  }, v => null), foreignKeyClause], v => Object.assign({\n    type: 'FOREIGN KEY'\n  }, ...v.filter(x => x !== null)))(ctx);\n}\n\nfunction foreignKeyClause(ctx) {\n  return s([t({\n    text: 'REFERENCES'\n  }, v => null), table, columnNameListOptional, o(m(a([deleteReference, updateReference, matchReference])), v => Object.assign({\n    delete: null,\n    update: null,\n    match: null\n  }, ...(v || []))), deferrable], v => ({\n    references: Object.assign({}, ...v.filter(x => x !== null))\n  }))(ctx);\n}\n\nfunction columnNameListOptional(ctx) {\n  return o(s([t({\n    text: '('\n  }), columnNameList, t({\n    text: ')'\n  })], v => v[1]), v => ({\n    columns: v ? v.columns : []\n  }))(ctx);\n}\n\nfunction columnNameList(ctx) {\n  return s([o(m(s([identifier, t({\n    text: ','\n  })], v => v[0])), v => v !== null ? v : []), identifier], v => ({\n    columns: v[0].concat([v[1]])\n  }))(ctx);\n}\n\nfunction deleteReference(ctx) {\n  return s([t({\n    text: 'ON'\n  }), t({\n    text: 'DELETE'\n  }), onAction], v => ({\n    delete: v[2]\n  }))(ctx);\n}\n\nfunction updateReference(ctx) {\n  return s([t({\n    text: 'ON'\n  }), t({\n    text: 'UPDATE'\n  }), onAction], v => ({\n    update: v[2]\n  }))(ctx);\n}\n\nfunction matchReference(ctx) {\n  return s([t({\n    text: 'MATCH'\n  }), a([t({\n    type: 'keyword'\n  }), t({\n    type: 'id'\n  })])], v => ({\n    match: v[1]\n  }))(ctx);\n}\n\nfunction deferrable(ctx) {\n  return o(s([o(t({\n    text: 'NOT'\n  })), t({\n    text: 'DEFERRABLE'\n  }), o(s([t({\n    text: 'INITIALLY'\n  }), a([t({\n    text: 'DEFERRED'\n  }), t({\n    text: 'IMMEDIATE'\n  })])], v => v[1].toUpperCase()))]), v => ({\n    deferrable: v ? {\n      not: v[0] !== null,\n      initially: v[2]\n    } : null\n  }))(ctx);\n}\n\nfunction constraintName(ctx) {\n  return o(s([t({\n    text: 'CONSTRAINT'\n  }), identifier], v => v[1]), v => ({\n    name: v\n  }))(ctx);\n}\n\nfunction createIndex(ctx) {\n  return s([t({\n    text: 'CREATE'\n  }, v => null), unique, t({\n    text: 'INDEX'\n  }, v => null), exists, schema, index, t({\n    text: 'ON'\n  }, v => null), table, t({\n    text: '('\n  }, v => null), indexedColumnList, t({\n    text: ')'\n  }, v => null), where, f], v => Object.assign({}, ...v.filter(x => x !== null)))(ctx);\n}\n\nfunction unique(ctx) {\n  return o(t({\n    text: 'UNIQUE'\n  }), v => ({\n    unique: v !== null\n  }))(ctx);\n}\n\nfunction exists(ctx) {\n  return o(s([t({\n    text: 'IF'\n  }), t({\n    text: 'NOT'\n  }), t({\n    text: 'EXISTS'\n  })]), v => ({\n    exists: v !== null\n  }))(ctx);\n}\n\nfunction schema(ctx) {\n  return o(s([identifier, t({\n    text: '.'\n  })], v => v[0]), v => ({\n    schema: v\n  }))(ctx);\n}\n\nfunction index(ctx) {\n  return s([identifier], v => ({\n    index: v[0]\n  }))(ctx);\n}\n\nfunction table(ctx) {\n  return s([identifier], v => ({\n    table: v[0]\n  }))(ctx);\n}\n\nfunction where(ctx) {\n  return o(s([t({\n    text: 'WHERE'\n  }), expression], v => v[1]), v => ({\n    where: v\n  }))(ctx);\n}\n\nfunction indexedColumnList(ctx) {\n  return a([s([indexedColumn, t({\n    text: ','\n  }), indexedColumnList], v => ({\n    columns: [v[0]].concat(v[2].columns)\n  })), s([indexedColumnExpression, t({\n    text: ','\n  }), indexedColumnList], v => ({\n    columns: [v[0]].concat(v[2].columns)\n  })), l({\n    do: indexedColumn,\n    next: t({\n      text: ')'\n    })\n  }, v => ({\n    columns: [v]\n  })), l({\n    do: indexedColumnExpression,\n    next: t({\n      text: ')'\n    })\n  }, v => ({\n    columns: [v]\n  }))])(ctx);\n}\n\nfunction indexedColumn(ctx) {\n  return s([s([identifier], v => ({\n    name: v[0],\n    expression: false\n  })), collation, order], v => Object.assign({}, ...v.filter(x => x !== null)))(ctx);\n}\n\nfunction indexedColumnExpression(ctx) {\n  return s([s([indexedExpression], v => ({\n    name: v[0],\n    expression: true\n  })), collation, order], v => Object.assign({}, ...v.filter(x => x !== null)))(ctx);\n}\n\nfunction collation(ctx) {\n  return o(s([t({\n    text: 'COLLATE'\n  }), t({\n    type: 'id'\n  })], v => v[1]), v => ({\n    collation: v\n  }))(ctx);\n}\n\nfunction order(ctx) {\n  return a([t({\n    text: 'ASC'\n  }), t({\n    text: 'DESC'\n  }), e], v => ({\n    order: v ? v.toUpperCase() : null\n  }))(ctx);\n}\n\nfunction indexedExpression(ctx) {\n  return m(a([n({\n    do: t({\n      type: 'keyword'\n    }),\n    not: a([t({\n      text: 'COLLATE'\n    }), t({\n      text: 'ASC'\n    }), t({\n      text: 'DESC'\n    })])\n  }), t({\n    type: 'id'\n  }), t({\n    type: 'string'\n  }), t({\n    type: 'blob'\n  }), t({\n    type: 'numeric'\n  }), t({\n    type: 'variable'\n  }), n({\n    do: t({\n      type: 'operator'\n    }),\n    not: a([t({\n      text: '('\n    }), t({\n      text: ')'\n    }), t({\n      text: ','\n    })])\n  }), s([t({\n    text: '('\n  }), o(expression), t({\n    text: ')'\n  })], v => v[1] || [])]))(ctx);\n}\n\nfunction expression(ctx) {\n  return m(a([t({\n    type: 'keyword'\n  }), t({\n    type: 'id'\n  }), t({\n    type: 'string'\n  }), t({\n    type: 'blob'\n  }), t({\n    type: 'numeric'\n  }), t({\n    type: 'variable'\n  }), n({\n    do: t({\n      type: 'operator'\n    }),\n    not: a([t({\n      text: '('\n    }), t({\n      text: ')'\n    })])\n  }), s([t({\n    text: '('\n  }), o(expression), t({\n    text: ')'\n  })], v => v[1] || [])]))(ctx);\n}\n\nfunction identifier(ctx) {\n  return t({\n    type: 'id'\n  }, v => /^[\"`[][^]*[\"`\\]]$/.test(v.text) ? v.text.substring(1, v.text.length - 1) : v.text)(ctx);\n}\n\nfunction onAction(ctx) {\n  return a([s([t({\n    text: 'SET'\n  }), t({\n    text: 'NULL'\n  })], v => `${v[0]} ${v[1]}`), s([t({\n    text: 'SET'\n  }), t({\n    text: 'DEFAULT'\n  })], v => `${v[0]} ${v[1]}`), t({\n    text: 'CASCADE'\n  }), t({\n    text: 'RESTRICT'\n  }), s([t({\n    text: 'NO'\n  }), t({\n    text: 'ACTION'\n  })], v => `${v[0]} ${v[1]}`)], v => v.toUpperCase())(ctx);\n}\n\nfunction literalValue(ctx) {\n  return a([t({\n    type: 'numeric'\n  }), t({\n    type: 'string'\n  }), t({\n    type: 'blob'\n  }), t({\n    text: 'NULL'\n  }), t({\n    text: 'TRUE'\n  }), t({\n    text: 'FALSE'\n  }), t({\n    text: 'CURRENT_TIME'\n  }), t({\n    text: 'CURRENT_DATE'\n  }), t({\n    text: 'CURRENT_TIMESTAMP'\n  })])(ctx);\n}\n\nfunction signedNumber(ctx) {\n  return s([a([t({\n    text: '+'\n  }), t({\n    text: '-'\n  }), e]), t({\n    type: 'numeric'\n  })], v => `${v[0] || ''}${v[1]}`)(ctx);\n}\n\nmodule.exports = {\n  parseCreateTable,\n  parseCreateIndex\n};","map":{"version":3,"sources":["/home/rosiane/Projeto-completo/back/node_modules/knex/lib/dialects/sqlite3/schema/internal/parser.js"],"names":["tokenize","require","s","a","m","o","l","n","t","e","f","TOKENS","keyword","id","string","blob","numeric","variable","operator","_ws","parseCreateTable","sql","result","createTable","input","success","Error","slice","index","map","text","join","ast","parseCreateIndex","createIndex","ctx","v","temporary","exists","schema","table","columnDefinitionList","tableConstraintList","rowid","Object","assign","filter","x","columnDefinition","columns","concat","identifier","name","typeName","columnConstraintList","type","signedNumber","columnConstraint","constraints","primary","notnull","null","unique","check","default","collate","references","as","primaryColumnConstraint","notnullColumnConstraint","nullColumnConstraint","uniqueColumnConstraint","checkColumnConstraint","defaultColumnConstraint","collateColumnConstraint","referencesColumnConstraint","asColumnConstraint","constraintName","order","conflictClause","autoincrement","expression","value","literalValue","collation","foreignKeyClause","generated","mode","toUpperCase","tableConstraint","primaryTableConstraint","uniqueTableConstraint","checkTableConstraint","foreignTableConstraint","indexedColumnList","conflict","columnNameList","columnNameListOptional","deleteReference","updateReference","matchReference","delete","update","match","deferrable","onAction","not","initially","where","indexedColumn","indexedColumnExpression","do","next","indexedExpression","test","substring","length","module","exports"],"mappings":"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","sourcesContent":["const { tokenize } = require('./tokenizer');\nconst { s, a, m, o, l, n, t, e, f } = require('./parser-combinator');\n\nconst TOKENS = {\n  keyword: /(?:ABORT|ACTION|ADD|AFTER|ALL|ALTER|ALWAYS|ANALYZE|AND|AS|ASC|ATTACH|AUTOINCREMENT|BEFORE|BEGIN|BETWEEN|BY|CASCADE|CASE|CAST|CHECK|COLLATE|COLUMN|COMMIT|CONFLICT|CONSTRAINT|CREATE|CROSS|CURRENT|CURRENT_DATE|CURRENT_TIME|CURRENT_TIMESTAMP|DATABASE|DEFAULT|DEFERRED|DEFERRABLE|DELETE|DESC|DETACH|DISTINCT|DO|DROP|END|EACH|ELSE|ESCAPE|EXCEPT|EXCLUSIVE|EXCLUDE|EXISTS|EXPLAIN|FAIL|FILTER|FIRST|FOLLOWING|FOR|FOREIGN|FROM|FULL|GENERATED|GLOB|GROUP|GROUPS|HAVING|IF|IGNORE|IMMEDIATE|IN|INDEX|INDEXED|INITIALLY|INNER|INSERT|INSTEAD|INTERSECT|INTO|IS|ISNULL|JOIN|KEY|LAST|LEFT|LIKE|LIMIT|MATCH|MATERIALIZED|NATURAL|NO|NOT|NOTHING|NOTNULL|NULL|NULLS|OF|OFFSET|ON|OR|ORDER|OTHERS|OUTER|OVER|PARTITION|PLAN|PRAGMA|PRECEDING|PRIMARY|QUERY|RAISE|RANGE|RECURSIVE|REFERENCES|REGEXP|REINDEX|RELEASE|RENAME|REPLACE|RESTRICT|RETURNING|RIGHT|ROLLBACK|ROW|ROWS|SAVEPOINT|SELECT|SET|TABLE|TEMP|TEMPORARY|THEN|TIES|TO|TRANSACTION|TRIGGER|UNBOUNDED|UNION|UNIQUE|UPDATE|USING|VACUUM|VALUES|VIEW|VIRTUAL|WHEN|WHERE|WINDOW|WITH|WITHOUT)(?=\\s+|-|\\(|\\)|;|\\+|\\*|\\/|%|==|=|<=|<>|<<|<|>=|>>|>|!=|,|&|~|\\|\\||\\||\\.)/,\n  id: /\"[^\"]*(?:\"\"[^\"]*)*\"|`[^`]*(?:``[^`]*)*`|\\[[^[\\]]*\\]|[a-z_][a-z0-9_$]*/,\n  string: /'[^']*(?:''[^']*)*'/,\n  blob: /x'(?:[0-9a-f][0-9a-f])+'/,\n  numeric: /(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e(?:\\+|-)?\\d+)?|0x[0-9a-f]+/,\n  variable: /\\?\\d*|[@$:][a-z0-9_$]+/,\n  operator: /-|\\(|\\)|;|\\+|\\*|\\/|%|==|=|<=|<>|<<|<|>=|>>|>|!=|,|&|~|\\|\\||\\||\\./,\n  _ws: /\\s+/,\n};\n\nfunction parseCreateTable(sql) {\n  const result = createTable({ input: tokenize(sql, TOKENS) });\n\n  if (!result.success) {\n    throw new Error(\n      `Parsing CREATE TABLE failed at [${result.input\n        .slice(result.index)\n        .map((t) => t.text)\n        .join(' ')}] of \"${sql}\"`\n    );\n  }\n\n  return result.ast;\n}\n\nfunction parseCreateIndex(sql) {\n  const result = createIndex({ input: tokenize(sql, TOKENS) });\n\n  if (!result.success) {\n    throw new Error(\n      `Parsing CREATE INDEX failed at [${result.input\n        .slice(result.index)\n        .map((t) => t.text)\n        .join(' ')}] of \"${sql}\"`\n    );\n  }\n\n  return result.ast;\n}\n\nfunction createTable(ctx) {\n  return s(\n    [\n      t({ text: 'CREATE' }, (v) => null),\n      temporary,\n      t({ text: 'TABLE' }, (v) => null),\n      exists,\n      schema,\n      table,\n      t({ text: '(' }, (v) => null),\n      columnDefinitionList,\n      tableConstraintList,\n      t({ text: ')' }, (v) => null),\n      rowid,\n      f,\n    ],\n    (v) => Object.assign({}, ...v.filter((x) => x !== null))\n  )(ctx);\n}\n\nfunction temporary(ctx) {\n  return a([t({ text: 'TEMP' }), t({ text: 'TEMPORARY' }), e], (v) => ({\n    temporary: v !== null,\n  }))(ctx);\n}\n\nfunction rowid(ctx) {\n  return o(s([t({ text: 'WITHOUT' }), t({ text: 'ROWID' })]), (v) => ({\n    rowid: v !== null,\n  }))(ctx);\n}\n\nfunction columnDefinitionList(ctx) {\n  return a([\n    s([columnDefinition, t({ text: ',' }), columnDefinitionList], (v) => ({\n      columns: [v[0]].concat(v[2].columns),\n    })),\n    s([columnDefinition], (v) => ({ columns: [v[0]] })),\n  ])(ctx);\n}\n\nfunction columnDefinition(ctx) {\n  return s(\n    [s([identifier], (v) => ({ name: v[0] })), typeName, columnConstraintList],\n    (v) => Object.assign({}, ...v)\n  )(ctx);\n}\n\nfunction typeName(ctx) {\n  return o(\n    s(\n      [\n        m(t({ type: 'id' })),\n        a([\n          s(\n            [\n              t({ text: '(' }),\n              signedNumber,\n              t({ text: ',' }),\n              signedNumber,\n              t({ text: ')' }),\n            ],\n            (v) => `(${v[1]}, ${v[3]})`\n          ),\n          s(\n            [t({ text: '(' }), signedNumber, t({ text: ')' })],\n            (v) => `(${v[1]})`\n          ),\n          e,\n        ]),\n      ],\n      (v) => `${v[0].join(' ')}${v[1] || ''}`\n    ),\n    (v) => ({ type: v })\n  )(ctx);\n}\n\nfunction columnConstraintList(ctx) {\n  return o(m(columnConstraint), (v) => ({\n    constraints: Object.assign(\n      {\n        primary: null,\n        notnull: null,\n        null: null,\n        unique: null,\n        check: null,\n        default: null,\n        collate: null,\n        references: null,\n        as: null,\n      },\n      ...(v || [])\n    ),\n  }))(ctx);\n}\n\nfunction columnConstraint(ctx) {\n  return a([\n    primaryColumnConstraint,\n    notnullColumnConstraint,\n    nullColumnConstraint,\n    uniqueColumnConstraint,\n    checkColumnConstraint,\n    defaultColumnConstraint,\n    collateColumnConstraint,\n    referencesColumnConstraint,\n    asColumnConstraint,\n  ])(ctx);\n}\n\nfunction primaryColumnConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      t({ text: 'PRIMARY' }, (v) => null),\n      t({ text: 'KEY' }, (v) => null),\n      order,\n      conflictClause,\n      autoincrement,\n    ],\n    (v) => ({ primary: Object.assign({}, ...v.filter((x) => x !== null)) })\n  )(ctx);\n}\n\nfunction autoincrement(ctx) {\n  return o(t({ text: 'AUTOINCREMENT' }), (v) => ({\n    autoincrement: v !== null,\n  }))(ctx);\n}\n\nfunction notnullColumnConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      t({ text: 'NOT' }, (v) => null),\n      t({ text: 'NULL' }, (v) => null),\n      conflictClause,\n    ],\n    (v) => ({ notnull: Object.assign({}, ...v.filter((x) => x !== null)) })\n  )(ctx);\n}\n\nfunction nullColumnConstraint(ctx) {\n  return s(\n    [constraintName, t({ text: 'NULL' }, (v) => null), conflictClause],\n    (v) => ({ null: Object.assign({}, ...v.filter((x) => x !== null)) })\n  )(ctx);\n}\n\nfunction uniqueColumnConstraint(ctx) {\n  return s(\n    [constraintName, t({ text: 'UNIQUE' }, (v) => null), conflictClause],\n    (v) => ({ unique: Object.assign({}, ...v.filter((x) => x !== null)) })\n  )(ctx);\n}\n\nfunction checkColumnConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      t({ text: 'CHECK' }, (v) => null),\n      t({ text: '(' }, (v) => null),\n      s([expression], (v) => ({ expression: v[0] })),\n      t({ text: ')' }, (v) => null),\n    ],\n    (v) => ({ check: Object.assign({}, ...v.filter((x) => x !== null)) })\n  )(ctx);\n}\n\nfunction defaultColumnConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      t({ text: 'DEFAULT' }, (v) => null),\n      a([\n        s([t({ text: '(' }), expression, t({ text: ')' })], (v) => ({\n          value: v[1],\n          expression: true,\n        })),\n        s([literalValue], (v) => ({ value: v[0], expression: false })),\n        s([signedNumber], (v) => ({ value: v[0], expression: false })),\n      ]),\n    ],\n    (v) => ({ default: Object.assign({}, ...v.filter((x) => x !== null)) })\n  )(ctx);\n}\n\nfunction collateColumnConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      t({ text: 'COLLATE' }, (v) => null),\n      t({ type: 'id' }, (v) => ({ collation: v.text })),\n    ],\n    (v) => ({ collate: Object.assign({}, ...v.filter((x) => x !== null)) })\n  )(ctx);\n}\n\nfunction referencesColumnConstraint(ctx) {\n  return s(\n    [constraintName, s([foreignKeyClause], (v) => v[0].references)],\n    (v) => ({\n      references: Object.assign({}, ...v.filter((x) => x !== null)),\n    })\n  )(ctx);\n}\n\nfunction asColumnConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      o(s([t({ text: 'GENERATED' }), t({ text: 'ALWAYS' })]), (v) => ({\n        generated: v !== null,\n      })),\n      t({ text: 'AS' }, (v) => null),\n      t({ text: '(' }, (v) => null),\n      s([expression], (v) => ({ expression: v[0] })),\n      t({ text: ')' }, (v) => null),\n      a([t({ text: 'STORED' }), t({ text: 'VIRTUAL' }), e], (v) => ({\n        mode: v ? v.toUpperCase() : null,\n      })),\n    ],\n    (v) => ({ as: Object.assign({}, ...v.filter((x) => x !== null)) })\n  )(ctx);\n}\n\nfunction tableConstraintList(ctx) {\n  return o(m(s([t({ text: ',' }), tableConstraint], (v) => v[1])), (v) => ({\n    constraints: v || [],\n  }))(ctx);\n}\n\nfunction tableConstraint(ctx) {\n  return a([\n    primaryTableConstraint,\n    uniqueTableConstraint,\n    checkTableConstraint,\n    foreignTableConstraint,\n  ])(ctx);\n}\n\nfunction primaryTableConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      t({ text: 'PRIMARY' }, (v) => null),\n      t({ text: 'KEY' }, (v) => null),\n      t({ text: '(' }, (v) => null),\n      indexedColumnList,\n      t({ text: ')' }, (v) => null),\n      conflictClause,\n    ],\n    (v) =>\n      Object.assign({ type: 'PRIMARY KEY' }, ...v.filter((x) => x !== null))\n  )(ctx);\n}\n\nfunction uniqueTableConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      t({ text: 'UNIQUE' }, (v) => null),\n      t({ text: '(' }, (v) => null),\n      indexedColumnList,\n      t({ text: ')' }, (v) => null),\n      conflictClause,\n    ],\n    (v) => Object.assign({ type: 'UNIQUE' }, ...v.filter((x) => x !== null))\n  )(ctx);\n}\n\nfunction conflictClause(ctx) {\n  return o(\n    s(\n      [\n        t({ text: 'ON' }),\n        t({ text: 'CONFLICT' }),\n        a([\n          t({ text: 'ROLLBACK' }),\n          t({ text: 'ABORT' }),\n          t({ text: 'FAIL' }),\n          t({ text: 'IGNORE' }),\n          t({ text: 'REPLACE' }),\n        ]),\n      ],\n      (v) => v[2]\n    ),\n    (v) => ({ conflict: v ? v.toUpperCase() : null })\n  )(ctx);\n}\n\nfunction checkTableConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      t({ text: 'CHECK' }, (v) => null),\n      t({ text: '(' }, (v) => null),\n      s([expression], (v) => ({ expression: v[0] })),\n      t({ text: ')' }, (v) => null),\n    ],\n    (v) => Object.assign({ type: 'CHECK' }, ...v.filter((x) => x !== null))\n  )(ctx);\n}\n\nfunction foreignTableConstraint(ctx) {\n  return s(\n    [\n      constraintName,\n      t({ text: 'FOREIGN' }, (v) => null),\n      t({ text: 'KEY' }, (v) => null),\n      t({ text: '(' }, (v) => null),\n      columnNameList,\n      t({ text: ')' }, (v) => null),\n      foreignKeyClause,\n    ],\n    (v) =>\n      Object.assign({ type: 'FOREIGN KEY' }, ...v.filter((x) => x !== null))\n  )(ctx);\n}\n\nfunction foreignKeyClause(ctx) {\n  return s(\n    [\n      t({ text: 'REFERENCES' }, (v) => null),\n      table,\n      columnNameListOptional,\n      o(m(a([deleteReference, updateReference, matchReference])), (v) =>\n        Object.assign({ delete: null, update: null, match: null }, ...(v || []))\n      ),\n      deferrable,\n    ],\n    (v) => ({ references: Object.assign({}, ...v.filter((x) => x !== null)) })\n  )(ctx);\n}\n\nfunction columnNameListOptional(ctx) {\n  return o(\n    s([t({ text: '(' }), columnNameList, t({ text: ')' })], (v) => v[1]),\n    (v) => ({ columns: v ? v.columns : [] })\n  )(ctx);\n}\n\nfunction columnNameList(ctx) {\n  return s(\n    [\n      o(m(s([identifier, t({ text: ',' })], (v) => v[0])), (v) =>\n        v !== null ? v : []\n      ),\n      identifier,\n    ],\n    (v) => ({ columns: v[0].concat([v[1]]) })\n  )(ctx);\n}\n\nfunction deleteReference(ctx) {\n  return s([t({ text: 'ON' }), t({ text: 'DELETE' }), onAction], (v) => ({\n    delete: v[2],\n  }))(ctx);\n}\n\nfunction updateReference(ctx) {\n  return s([t({ text: 'ON' }), t({ text: 'UPDATE' }), onAction], (v) => ({\n    update: v[2],\n  }))(ctx);\n}\n\nfunction matchReference(ctx) {\n  return s(\n    [t({ text: 'MATCH' }), a([t({ type: 'keyword' }), t({ type: 'id' })])],\n    (v) => ({ match: v[1] })\n  )(ctx);\n}\n\nfunction deferrable(ctx) {\n  return o(\n    s([\n      o(t({ text: 'NOT' })),\n      t({ text: 'DEFERRABLE' }),\n      o(\n        s(\n          [\n            t({ text: 'INITIALLY' }),\n            a([t({ text: 'DEFERRED' }), t({ text: 'IMMEDIATE' })]),\n          ],\n          (v) => v[1].toUpperCase()\n        )\n      ),\n    ]),\n    (v) => ({ deferrable: v ? { not: v[0] !== null, initially: v[2] } : null })\n  )(ctx);\n}\n\nfunction constraintName(ctx) {\n  return o(\n    s([t({ text: 'CONSTRAINT' }), identifier], (v) => v[1]),\n    (v) => ({ name: v })\n  )(ctx);\n}\n\nfunction createIndex(ctx) {\n  return s(\n    [\n      t({ text: 'CREATE' }, (v) => null),\n      unique,\n      t({ text: 'INDEX' }, (v) => null),\n      exists,\n      schema,\n      index,\n      t({ text: 'ON' }, (v) => null),\n      table,\n      t({ text: '(' }, (v) => null),\n      indexedColumnList,\n      t({ text: ')' }, (v) => null),\n      where,\n      f,\n    ],\n    (v) => Object.assign({}, ...v.filter((x) => x !== null))\n  )(ctx);\n}\n\nfunction unique(ctx) {\n  return o(t({ text: 'UNIQUE' }), (v) => ({ unique: v !== null }))(ctx);\n}\n\nfunction exists(ctx) {\n  return o(\n    s([t({ text: 'IF' }), t({ text: 'NOT' }), t({ text: 'EXISTS' })]),\n    (v) => ({ exists: v !== null })\n  )(ctx);\n}\n\nfunction schema(ctx) {\n  return o(\n    s([identifier, t({ text: '.' })], (v) => v[0]),\n    (v) => ({ schema: v })\n  )(ctx);\n}\n\nfunction index(ctx) {\n  return s([identifier], (v) => ({ index: v[0] }))(ctx);\n}\n\nfunction table(ctx) {\n  return s([identifier], (v) => ({ table: v[0] }))(ctx);\n}\n\nfunction where(ctx) {\n  return o(\n    s([t({ text: 'WHERE' }), expression], (v) => v[1]),\n    (v) => ({ where: v })\n  )(ctx);\n}\n\nfunction indexedColumnList(ctx) {\n  return a([\n    s([indexedColumn, t({ text: ',' }), indexedColumnList], (v) => ({\n      columns: [v[0]].concat(v[2].columns),\n    })),\n    s([indexedColumnExpression, t({ text: ',' }), indexedColumnList], (v) => ({\n      columns: [v[0]].concat(v[2].columns),\n    })),\n    l({ do: indexedColumn, next: t({ text: ')' }) }, (v) => ({\n      columns: [v],\n    })),\n    l({ do: indexedColumnExpression, next: t({ text: ')' }) }, (v) => ({\n      columns: [v],\n    })),\n  ])(ctx);\n}\n\nfunction indexedColumn(ctx) {\n  return s(\n    [\n      s([identifier], (v) => ({ name: v[0], expression: false })),\n      collation,\n      order,\n    ],\n    (v) => Object.assign({}, ...v.filter((x) => x !== null))\n  )(ctx);\n}\n\nfunction indexedColumnExpression(ctx) {\n  return s(\n    [\n      s([indexedExpression], (v) => ({ name: v[0], expression: true })),\n      collation,\n      order,\n    ],\n    (v) => Object.assign({}, ...v.filter((x) => x !== null))\n  )(ctx);\n}\n\nfunction collation(ctx) {\n  return o(\n    s([t({ text: 'COLLATE' }), t({ type: 'id' })], (v) => v[1]),\n    (v) => ({ collation: v })\n  )(ctx);\n}\n\nfunction order(ctx) {\n  return a([t({ text: 'ASC' }), t({ text: 'DESC' }), e], (v) => ({\n    order: v ? v.toUpperCase() : null,\n  }))(ctx);\n}\n\nfunction indexedExpression(ctx) {\n  return m(\n    a([\n      n({\n        do: t({ type: 'keyword' }),\n        not: a([\n          t({ text: 'COLLATE' }),\n          t({ text: 'ASC' }),\n          t({ text: 'DESC' }),\n        ]),\n      }),\n      t({ type: 'id' }),\n      t({ type: 'string' }),\n      t({ type: 'blob' }),\n      t({ type: 'numeric' }),\n      t({ type: 'variable' }),\n      n({\n        do: t({ type: 'operator' }),\n        not: a([t({ text: '(' }), t({ text: ')' }), t({ text: ',' })]),\n      }),\n      s([t({ text: '(' }), o(expression), t({ text: ')' })], (v) => v[1] || []),\n    ])\n  )(ctx);\n}\n\nfunction expression(ctx) {\n  return m(\n    a([\n      t({ type: 'keyword' }),\n      t({ type: 'id' }),\n      t({ type: 'string' }),\n      t({ type: 'blob' }),\n      t({ type: 'numeric' }),\n      t({ type: 'variable' }),\n      n({\n        do: t({ type: 'operator' }),\n        not: a([t({ text: '(' }), t({ text: ')' })]),\n      }),\n      s([t({ text: '(' }), o(expression), t({ text: ')' })], (v) => v[1] || []),\n    ])\n  )(ctx);\n}\n\nfunction identifier(ctx) {\n  return t({ type: 'id' }, (v) =>\n    /^[\"`[][^]*[\"`\\]]$/.test(v.text)\n      ? v.text.substring(1, v.text.length - 1)\n      : v.text\n  )(ctx);\n}\n\nfunction onAction(ctx) {\n  return a(\n    [\n      s([t({ text: 'SET' }), t({ text: 'NULL' })], (v) => `${v[0]} ${v[1]}`),\n      s([t({ text: 'SET' }), t({ text: 'DEFAULT' })], (v) => `${v[0]} ${v[1]}`),\n      t({ text: 'CASCADE' }),\n      t({ text: 'RESTRICT' }),\n      s([t({ text: 'NO' }), t({ text: 'ACTION' })], (v) => `${v[0]} ${v[1]}`),\n    ],\n    (v) => v.toUpperCase()\n  )(ctx);\n}\n\nfunction literalValue(ctx) {\n  return a([\n    t({ type: 'numeric' }),\n    t({ type: 'string' }),\n    t({ type: 'blob' }),\n    t({ text: 'NULL' }),\n    t({ text: 'TRUE' }),\n    t({ text: 'FALSE' }),\n    t({ text: 'CURRENT_TIME' }),\n    t({ text: 'CURRENT_DATE' }),\n    t({ text: 'CURRENT_TIMESTAMP' }),\n  ])(ctx);\n}\n\nfunction signedNumber(ctx) {\n  return s(\n    [a([t({ text: '+' }), t({ text: '-' }), e]), t({ type: 'numeric' })],\n    (v) => `${v[0] || ''}${v[1]}`\n  )(ctx);\n}\n\nmodule.exports = {\n  parseCreateTable,\n  parseCreateIndex,\n};\n"]},"metadata":{},"sourceType":"script"}