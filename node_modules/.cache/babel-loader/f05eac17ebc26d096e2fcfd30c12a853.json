{"ast":null,"code":"const Client = require('../client');\n\nconst QueryBuilder = require('../query/querybuilder');\n\nconst QueryInterface = require('../query/method-constants');\n\nconst makeKnex = require('./make-knex');\n\nconst {\n  KnexTimeoutError\n} = require('../util/timeout');\n\nconst {\n  resolveConfig\n} = require('./internal/config-resolver');\n\nfunction knex(config) {\n  const {\n    resolvedConfig,\n    Dialect\n  } = resolveConfig(...arguments);\n  const newKnex = makeKnex(new Dialect(resolvedConfig));\n\n  if (resolvedConfig.userParams) {\n    newKnex.userParams = resolvedConfig.userParams;\n  }\n\n  return newKnex;\n} // Expose Client on the main Knex namespace.\n\n\nknex.Client = Client;\nknex.KnexTimeoutError = KnexTimeoutError;\nknex.QueryBuilder = {\n  extend: function (methodName, fn) {\n    QueryBuilder.extend(methodName, fn);\n    QueryInterface.push(methodName);\n  }\n};\nmodule.exports = knex;","map":{"version":3,"sources":["/home/rosiane/Projeto-completo/back/node_modules/knex/lib/knex-builder/Knex.js"],"names":["Client","require","QueryBuilder","QueryInterface","makeKnex","KnexTimeoutError","resolveConfig","knex","config","resolvedConfig","Dialect","arguments","newKnex","userParams","extend","methodName","fn","push","module","exports"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,uBAAD,CAA5B;;AACA,MAAME,cAAc,GAAGF,OAAO,CAAC,2BAAD,CAA9B;;AAEA,MAAMG,QAAQ,GAAGH,OAAO,CAAC,aAAD,CAAxB;;AACA,MAAM;AAAEI,EAAAA;AAAF,IAAuBJ,OAAO,CAAC,iBAAD,CAApC;;AACA,MAAM;AAAEK,EAAAA;AAAF,IAAoBL,OAAO,CAAC,4BAAD,CAAjC;;AAEA,SAASM,IAAT,CAAcC,MAAd,EAAsB;AACpB,QAAM;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAA8BJ,aAAa,CAAC,GAAGK,SAAJ,CAAjD;AAEA,QAAMC,OAAO,GAAGR,QAAQ,CAAC,IAAIM,OAAJ,CAAYD,cAAZ,CAAD,CAAxB;;AACA,MAAIA,cAAc,CAACI,UAAnB,EAA+B;AAC7BD,IAAAA,OAAO,CAACC,UAAR,GAAqBJ,cAAc,CAACI,UAApC;AACD;;AACD,SAAOD,OAAP;AACD,C,CAED;;;AACAL,IAAI,CAACP,MAAL,GAAcA,MAAd;AAEAO,IAAI,CAACF,gBAAL,GAAwBA,gBAAxB;AAEAE,IAAI,CAACL,YAAL,GAAoB;AAClBY,EAAAA,MAAM,EAAE,UAAUC,UAAV,EAAsBC,EAAtB,EAA0B;AAChCd,IAAAA,YAAY,CAACY,MAAb,CAAoBC,UAApB,EAAgCC,EAAhC;AACAb,IAAAA,cAAc,CAACc,IAAf,CAAoBF,UAApB;AACD;AAJiB,CAApB;AAOAG,MAAM,CAACC,OAAP,GAAiBZ,IAAjB","sourcesContent":["const Client = require('../client');\nconst QueryBuilder = require('../query/querybuilder');\nconst QueryInterface = require('../query/method-constants');\n\nconst makeKnex = require('./make-knex');\nconst { KnexTimeoutError } = require('../util/timeout');\nconst { resolveConfig } = require('./internal/config-resolver');\n\nfunction knex(config) {\n  const { resolvedConfig, Dialect } = resolveConfig(...arguments);\n\n  const newKnex = makeKnex(new Dialect(resolvedConfig));\n  if (resolvedConfig.userParams) {\n    newKnex.userParams = resolvedConfig.userParams;\n  }\n  return newKnex;\n}\n\n// Expose Client on the main Knex namespace.\nknex.Client = Client;\n\nknex.KnexTimeoutError = KnexTimeoutError;\n\nknex.QueryBuilder = {\n  extend: function (methodName, fn) {\n    QueryBuilder.extend(methodName, fn);\n    QueryInterface.push(methodName);\n  },\n};\n\nmodule.exports = knex;\n"]},"metadata":{},"sourceType":"script"}