{"ast":null,"code":"// MySQL2 Client\n// -------\nconst Client_MySQL = require('../mysql');\n\nconst Transaction = require('./transaction'); // Always initialize with the \"QueryBuilder\" and \"QueryCompiler\"\n// objects, which extend the base 'lib/query/builder' and\n// 'lib/query/compiler', respectively.\n\n\nclass Client_MySQL2 extends Client_MySQL {\n  transaction() {\n    return new Transaction(this, ...arguments);\n  }\n\n  _driver() {\n    return require('mysql2');\n  }\n\n  validateConnection(connection) {\n    if (connection._fatalError) {\n      return false;\n    }\n\n    return true;\n  }\n\n}\n\nObject.assign(Client_MySQL2.prototype, {\n  // The \"dialect\", for reference elsewhere.\n  driverName: 'mysql2'\n});\nmodule.exports = Client_MySQL2;","map":{"version":3,"sources":["/home/rosiane/back/node_modules/knex/lib/dialects/mysql2/index.js"],"names":["Client_MySQL","require","Transaction","Client_MySQL2","transaction","arguments","_driver","validateConnection","connection","_fatalError","Object","assign","prototype","driverName","module","exports"],"mappings":"AAAA;AACA;AACA,MAAMA,YAAY,GAAGC,OAAO,CAAC,UAAD,CAA5B;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,eAAD,CAA3B,C,CAEA;AACA;AACA;;;AACA,MAAME,aAAN,SAA4BH,YAA5B,CAAyC;AACvCI,EAAAA,WAAW,GAAG;AACZ,WAAO,IAAIF,WAAJ,CAAgB,IAAhB,EAAsB,GAAGG,SAAzB,CAAP;AACD;;AAEDC,EAAAA,OAAO,GAAG;AACR,WAAOL,OAAO,CAAC,QAAD,CAAd;AACD;;AACDM,EAAAA,kBAAkB,CAACC,UAAD,EAAa;AAC7B,QAAIA,UAAU,CAACC,WAAf,EAA4B;AAC1B,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD;;AAbsC;;AAgBzCC,MAAM,CAACC,MAAP,CAAcR,aAAa,CAACS,SAA5B,EAAuC;AACrC;AACAC,EAAAA,UAAU,EAAE;AAFyB,CAAvC;AAKAC,MAAM,CAACC,OAAP,GAAiBZ,aAAjB","sourcesContent":["// MySQL2 Client\n// -------\nconst Client_MySQL = require('../mysql');\nconst Transaction = require('./transaction');\n\n// Always initialize with the \"QueryBuilder\" and \"QueryCompiler\"\n// objects, which extend the base 'lib/query/builder' and\n// 'lib/query/compiler', respectively.\nclass Client_MySQL2 extends Client_MySQL {\n  transaction() {\n    return new Transaction(this, ...arguments);\n  }\n\n  _driver() {\n    return require('mysql2');\n  }\n  validateConnection(connection) {\n    if (connection._fatalError) {\n      return false;\n    }\n    return true;\n  }\n}\n\nObject.assign(Client_MySQL2.prototype, {\n  // The \"dialect\", for reference elsewhere.\n  driverName: 'mysql2',\n});\n\nmodule.exports = Client_MySQL2;\n"]},"metadata":{},"sourceType":"script"}