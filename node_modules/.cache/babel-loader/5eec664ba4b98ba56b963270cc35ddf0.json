{"ast":null,"code":"const ColumnCompiler = require('../../../schema/columncompiler'); // Column Compiler\n// -------\n\n\nclass ColumnCompiler_SQLite3 extends ColumnCompiler {\n  constructor() {\n    super(...arguments);\n    this.modifiers = ['nullable', 'defaultTo'];\n  } // Types\n  // -------\n\n\n  enu(allowed) {\n    return `text check (${this.formatter.wrap(this.args[0])} in ('${allowed.join(\"', '\")}'))`;\n  }\n\n}\n\nColumnCompiler_SQLite3.prototype.json = 'json';\nColumnCompiler_SQLite3.prototype.jsonb = 'json';\nColumnCompiler_SQLite3.prototype.double = ColumnCompiler_SQLite3.prototype.decimal = ColumnCompiler_SQLite3.prototype.floating = 'float';\nColumnCompiler_SQLite3.prototype.timestamp = 'datetime';\nmodule.exports = ColumnCompiler_SQLite3;","map":{"version":3,"sources":["/home/rosiane/Projeto-completo/back/node_modules/knex/lib/dialects/sqlite3/schema/sqlite-columncompiler.js"],"names":["ColumnCompiler","require","ColumnCompiler_SQLite3","constructor","arguments","modifiers","enu","allowed","formatter","wrap","args","join","prototype","json","jsonb","double","decimal","floating","timestamp","module","exports"],"mappings":"AAAA,MAAMA,cAAc,GAAGC,OAAO,CAAC,gCAAD,CAA9B,C,CAEA;AACA;;;AAEA,MAAMC,sBAAN,SAAqCF,cAArC,CAAoD;AAClDG,EAAAA,WAAW,GAAG;AACZ,UAAM,GAAGC,SAAT;AACA,SAAKC,SAAL,GAAiB,CAAC,UAAD,EAAa,WAAb,CAAjB;AACD,GAJiD,CAMlD;AACA;;;AAEAC,EAAAA,GAAG,CAACC,OAAD,EAAU;AACX,WAAQ,eAAc,KAAKC,SAAL,CAAeC,IAAf,CACpB,KAAKC,IAAL,CAAU,CAAV,CADoB,CAEpB,SAAQH,OAAO,CAACI,IAAR,CAAa,MAAb,CAAqB,KAF/B;AAGD;;AAbiD;;AAgBpDT,sBAAsB,CAACU,SAAvB,CAAiCC,IAAjC,GAAwC,MAAxC;AACAX,sBAAsB,CAACU,SAAvB,CAAiCE,KAAjC,GAAyC,MAAzC;AACAZ,sBAAsB,CAACU,SAAvB,CAAiCG,MAAjC,GAA0Cb,sBAAsB,CAACU,SAAvB,CAAiCI,OAAjC,GAA2Cd,sBAAsB,CAACU,SAAvB,CAAiCK,QAAjC,GACnF,OADF;AAEAf,sBAAsB,CAACU,SAAvB,CAAiCM,SAAjC,GAA6C,UAA7C;AAEAC,MAAM,CAACC,OAAP,GAAiBlB,sBAAjB","sourcesContent":["const ColumnCompiler = require('../../../schema/columncompiler');\n\n// Column Compiler\n// -------\n\nclass ColumnCompiler_SQLite3 extends ColumnCompiler {\n  constructor() {\n    super(...arguments);\n    this.modifiers = ['nullable', 'defaultTo'];\n  }\n\n  // Types\n  // -------\n\n  enu(allowed) {\n    return `text check (${this.formatter.wrap(\n      this.args[0]\n    )} in ('${allowed.join(\"', '\")}'))`;\n  }\n}\n\nColumnCompiler_SQLite3.prototype.json = 'json';\nColumnCompiler_SQLite3.prototype.jsonb = 'json';\nColumnCompiler_SQLite3.prototype.double = ColumnCompiler_SQLite3.prototype.decimal = ColumnCompiler_SQLite3.prototype.floating =\n  'float';\nColumnCompiler_SQLite3.prototype.timestamp = 'datetime';\n\nmodule.exports = ColumnCompiler_SQLite3;\n"]},"metadata":{},"sourceType":"script"}