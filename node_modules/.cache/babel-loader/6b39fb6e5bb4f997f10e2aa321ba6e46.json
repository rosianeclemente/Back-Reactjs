{"ast":null,"code":"/*eslint max-len: 0, no-var:0 */\nconst charsRegex = /[\\0\\b\\t\\n\\r\\x1a\"'\\\\]/g; // eslint-disable-line no-control-regex\n\nconst charsMap = {\n  '\\0': '\\\\0',\n  '\\b': '\\\\b',\n  '\\t': '\\\\t',\n  '\\n': '\\\\n',\n  '\\r': '\\\\r',\n  '\\x1a': '\\\\Z',\n  '\"': '\\\\\"',\n  \"'\": \"\\\\'\",\n  '\\\\': '\\\\\\\\'\n};\n\nfunction wrapEscape(escapeFn) {\n  return function finalEscape(val, ctx = {}) {\n    return escapeFn(val, finalEscape, ctx);\n  };\n}\n\nfunction makeEscape(config = {}) {\n  const finalEscapeDate = config.escapeDate || dateToString;\n  const finalEscapeArray = config.escapeArray || arrayToList;\n  const finalEscapeBuffer = config.escapeBuffer || bufferToString;\n  const finalEscapeString = config.escapeString || escapeString;\n  const finalEscapeObject = config.escapeObject || escapeObject;\n  const finalWrap = config.wrap || wrapEscape;\n\n  function escapeFn(val, finalEscape, ctx) {\n    if (val === undefined || val === null) {\n      return 'NULL';\n    }\n\n    switch (typeof val) {\n      case 'boolean':\n        return val ? 'true' : 'false';\n\n      case 'number':\n        return val + '';\n\n      case 'object':\n        if (val instanceof Date) {\n          val = finalEscapeDate(val, finalEscape, ctx);\n        } else if (Array.isArray(val)) {\n          return finalEscapeArray(val, finalEscape, ctx);\n        } else if (Buffer.isBuffer(val)) {\n          return finalEscapeBuffer(val, finalEscape, ctx);\n        } else {\n          return finalEscapeObject(val, finalEscape, ctx);\n        }\n\n    }\n\n    return finalEscapeString(val, finalEscape, ctx);\n  }\n\n  return finalWrap ? finalWrap(escapeFn) : escapeFn;\n}\n\nfunction escapeObject(val, finalEscape, ctx) {\n  if (val && typeof val.toSQL === 'function') {\n    return val.toSQL(ctx);\n  } else {\n    return JSON.stringify(val);\n  }\n}\n\nfunction arrayToList(array, finalEscape, ctx) {\n  let sql = '';\n\n  for (let i = 0; i < array.length; i++) {\n    const val = array[i];\n\n    if (Array.isArray(val)) {\n      sql += (i === 0 ? '' : ', ') + '(' + arrayToList(val, finalEscape, ctx) + ')';\n    } else {\n      sql += (i === 0 ? '' : ', ') + finalEscape(val, ctx);\n    }\n  }\n\n  return sql;\n}\n\nfunction bufferToString(buffer) {\n  return 'X' + escapeString(buffer.toString('hex'));\n}\n\nfunction escapeString(val, finalEscape, ctx) {\n  let chunkIndex = charsRegex.lastIndex = 0;\n  let escapedVal = '';\n  let match;\n\n  while (match = charsRegex.exec(val)) {\n    escapedVal += val.slice(chunkIndex, match.index) + charsMap[match[0]];\n    chunkIndex = charsRegex.lastIndex;\n  }\n\n  if (chunkIndex === 0) {\n    // Nothing was escaped\n    return \"'\" + val + \"'\";\n  }\n\n  if (chunkIndex < val.length) {\n    return \"'\" + escapedVal + val.slice(chunkIndex) + \"'\";\n  }\n\n  return \"'\" + escapedVal + \"'\";\n}\n\nfunction dateToString(date, finalEscape, ctx = {}) {\n  const timeZone = ctx.timeZone || 'local';\n  const dt = new Date(date);\n  let year;\n  let month;\n  let day;\n  let hour;\n  let minute;\n  let second;\n  let millisecond;\n\n  if (timeZone === 'local') {\n    year = dt.getFullYear();\n    month = dt.getMonth() + 1;\n    day = dt.getDate();\n    hour = dt.getHours();\n    minute = dt.getMinutes();\n    second = dt.getSeconds();\n    millisecond = dt.getMilliseconds();\n  } else {\n    const tz = convertTimezone(timeZone);\n\n    if (tz !== false && tz !== 0) {\n      dt.setTime(dt.getTime() + tz * 60000);\n    }\n\n    year = dt.getUTCFullYear();\n    month = dt.getUTCMonth() + 1;\n    day = dt.getUTCDate();\n    hour = dt.getUTCHours();\n    minute = dt.getUTCMinutes();\n    second = dt.getUTCSeconds();\n    millisecond = dt.getUTCMilliseconds();\n  } // YYYY-MM-DD HH:mm:ss.mmm\n\n\n  return zeroPad(year, 4) + '-' + zeroPad(month, 2) + '-' + zeroPad(day, 2) + ' ' + zeroPad(hour, 2) + ':' + zeroPad(minute, 2) + ':' + zeroPad(second, 2) + '.' + zeroPad(millisecond, 3);\n}\n\nfunction zeroPad(number, length) {\n  number = number.toString();\n\n  while (number.length < length) {\n    number = '0' + number;\n  }\n\n  return number;\n}\n\nfunction convertTimezone(tz) {\n  if (tz === 'Z') {\n    return 0;\n  }\n\n  const m = tz.match(/([+\\-\\s])(\\d\\d):?(\\d\\d)?/);\n\n  if (m) {\n    return (m[1] == '-' ? -1 : 1) * (parseInt(m[2], 10) + (m[3] ? parseInt(m[3], 10) : 0) / 60) * 60;\n  }\n\n  return false;\n}\n\nmodule.exports = {\n  arrayToList,\n  bufferToString,\n  dateToString,\n  escapeString,\n  charsRegex,\n  charsMap,\n  escapeObject,\n  makeEscape\n};","map":{"version":3,"sources":["/home/rosiane/Projeto-completo/back/node_modules/knex/lib/util/string.js"],"names":["charsRegex","charsMap","wrapEscape","escapeFn","finalEscape","val","ctx","makeEscape","config","finalEscapeDate","escapeDate","dateToString","finalEscapeArray","escapeArray","arrayToList","finalEscapeBuffer","escapeBuffer","bufferToString","finalEscapeString","escapeString","finalEscapeObject","escapeObject","finalWrap","wrap","undefined","Date","Array","isArray","Buffer","isBuffer","toSQL","JSON","stringify","array","sql","i","length","buffer","toString","chunkIndex","lastIndex","escapedVal","match","exec","slice","index","date","timeZone","dt","year","month","day","hour","minute","second","millisecond","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","tz","convertTimezone","setTime","getTime","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","zeroPad","number","m","parseInt","module","exports"],"mappings":"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","sourcesContent":["/*eslint max-len: 0, no-var:0 */\n\nconst charsRegex = /[\\0\\b\\t\\n\\r\\x1a\"'\\\\]/g; // eslint-disable-line no-control-regex\nconst charsMap = {\n  '\\0': '\\\\0',\n  '\\b': '\\\\b',\n  '\\t': '\\\\t',\n  '\\n': '\\\\n',\n  '\\r': '\\\\r',\n  '\\x1a': '\\\\Z',\n  '\"': '\\\\\"',\n  \"'\": \"\\\\'\",\n  '\\\\': '\\\\\\\\',\n};\n\nfunction wrapEscape(escapeFn) {\n  return function finalEscape(val, ctx = {}) {\n    return escapeFn(val, finalEscape, ctx);\n  };\n}\n\nfunction makeEscape(config = {}) {\n  const finalEscapeDate = config.escapeDate || dateToString;\n  const finalEscapeArray = config.escapeArray || arrayToList;\n  const finalEscapeBuffer = config.escapeBuffer || bufferToString;\n  const finalEscapeString = config.escapeString || escapeString;\n  const finalEscapeObject = config.escapeObject || escapeObject;\n  const finalWrap = config.wrap || wrapEscape;\n\n  function escapeFn(val, finalEscape, ctx) {\n    if (val === undefined || val === null) {\n      return 'NULL';\n    }\n    switch (typeof val) {\n      case 'boolean':\n        return val ? 'true' : 'false';\n      case 'number':\n        return val + '';\n      case 'object':\n        if (val instanceof Date) {\n          val = finalEscapeDate(val, finalEscape, ctx);\n        } else if (Array.isArray(val)) {\n          return finalEscapeArray(val, finalEscape, ctx);\n        } else if (Buffer.isBuffer(val)) {\n          return finalEscapeBuffer(val, finalEscape, ctx);\n        } else {\n          return finalEscapeObject(val, finalEscape, ctx);\n        }\n    }\n    return finalEscapeString(val, finalEscape, ctx);\n  }\n\n  return finalWrap ? finalWrap(escapeFn) : escapeFn;\n}\n\nfunction escapeObject(val, finalEscape, ctx) {\n  if (val && typeof val.toSQL === 'function') {\n    return val.toSQL(ctx);\n  } else {\n    return JSON.stringify(val);\n  }\n}\n\nfunction arrayToList(array, finalEscape, ctx) {\n  let sql = '';\n  for (let i = 0; i < array.length; i++) {\n    const val = array[i];\n    if (Array.isArray(val)) {\n      sql +=\n        (i === 0 ? '' : ', ') + '(' + arrayToList(val, finalEscape, ctx) + ')';\n    } else {\n      sql += (i === 0 ? '' : ', ') + finalEscape(val, ctx);\n    }\n  }\n  return sql;\n}\n\nfunction bufferToString(buffer) {\n  return 'X' + escapeString(buffer.toString('hex'));\n}\n\nfunction escapeString(val, finalEscape, ctx) {\n  let chunkIndex = (charsRegex.lastIndex = 0);\n  let escapedVal = '';\n  let match;\n\n  while ((match = charsRegex.exec(val))) {\n    escapedVal += val.slice(chunkIndex, match.index) + charsMap[match[0]];\n    chunkIndex = charsRegex.lastIndex;\n  }\n\n  if (chunkIndex === 0) {\n    // Nothing was escaped\n    return \"'\" + val + \"'\";\n  }\n\n  if (chunkIndex < val.length) {\n    return \"'\" + escapedVal + val.slice(chunkIndex) + \"'\";\n  }\n\n  return \"'\" + escapedVal + \"'\";\n}\n\nfunction dateToString(date, finalEscape, ctx = {}) {\n  const timeZone = ctx.timeZone || 'local';\n\n  const dt = new Date(date);\n  let year;\n  let month;\n  let day;\n  let hour;\n  let minute;\n  let second;\n  let millisecond;\n\n  if (timeZone === 'local') {\n    year = dt.getFullYear();\n    month = dt.getMonth() + 1;\n    day = dt.getDate();\n    hour = dt.getHours();\n    minute = dt.getMinutes();\n    second = dt.getSeconds();\n    millisecond = dt.getMilliseconds();\n  } else {\n    const tz = convertTimezone(timeZone);\n\n    if (tz !== false && tz !== 0) {\n      dt.setTime(dt.getTime() + tz * 60000);\n    }\n\n    year = dt.getUTCFullYear();\n    month = dt.getUTCMonth() + 1;\n    day = dt.getUTCDate();\n    hour = dt.getUTCHours();\n    minute = dt.getUTCMinutes();\n    second = dt.getUTCSeconds();\n    millisecond = dt.getUTCMilliseconds();\n  }\n\n  // YYYY-MM-DD HH:mm:ss.mmm\n  return (\n    zeroPad(year, 4) +\n    '-' +\n    zeroPad(month, 2) +\n    '-' +\n    zeroPad(day, 2) +\n    ' ' +\n    zeroPad(hour, 2) +\n    ':' +\n    zeroPad(minute, 2) +\n    ':' +\n    zeroPad(second, 2) +\n    '.' +\n    zeroPad(millisecond, 3)\n  );\n}\n\nfunction zeroPad(number, length) {\n  number = number.toString();\n  while (number.length < length) {\n    number = '0' + number;\n  }\n  return number;\n}\n\nfunction convertTimezone(tz) {\n  if (tz === 'Z') {\n    return 0;\n  }\n  const m = tz.match(/([+\\-\\s])(\\d\\d):?(\\d\\d)?/);\n  if (m) {\n    return (\n      (m[1] == '-' ? -1 : 1) *\n      (parseInt(m[2], 10) + (m[3] ? parseInt(m[3], 10) : 0) / 60) *\n      60\n    );\n  }\n  return false;\n}\n\nmodule.exports = {\n  arrayToList,\n  bufferToString,\n  dateToString,\n  escapeString,\n  charsRegex,\n  charsMap,\n  escapeObject,\n  makeEscape,\n};\n"]},"metadata":{},"sourceType":"script"}