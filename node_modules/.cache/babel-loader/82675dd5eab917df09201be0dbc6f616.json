{"ast":null,"code":"const connection = require('../database/connections');\n\nconst crypto = require('crypto');\n\nmodule.exports = {\n  async index(request, response) {\n    const ongs = await connection('ongs').select('*');\n    return response.json(ongs);\n  },\n\n  async create(request, response) {\n    const {\n      name,\n      email,\n      whatsapp,\n      city,\n      uf\n    } = request.body;\n    const id = crypto.randomBytes(4).toString('HEX');\n    await connection('ongs').insert({\n      id,\n      name,\n      email,\n      whatsapp,\n      city,\n      uf\n    });\n    return response.json({\n      id\n    });\n  }\n\n};","map":{"version":3,"sources":["/home/rosiane/Projeto-completo/back/src/controllers/OngsControllers.js"],"names":["connection","require","crypto","module","exports","index","request","response","ongs","select","json","create","name","email","whatsapp","city","uf","body","id","randomBytes","toString","insert"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,yBAAD,CAA1B;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AAEAE,MAAM,CAACC,OAAP,GAAiB;AACb,QAAMC,KAAN,CAAaC,OAAb,EAAsBC,QAAtB,EAAiC;AAE7B,UAAMC,IAAI,GAAG,MAAMR,UAAU,CAAC,MAAD,CAAV,CAAmBS,MAAnB,CAA0B,GAA1B,CAAnB;AAEA,WAAOF,QAAQ,CAACG,IAAT,CAAcF,IAAd,CAAP;AACH,GANY;;AAOb,QAAMG,MAAN,CAAaL,OAAb,EAAsBC,QAAtB,EAAgC;AAC5B,UAAK;AAAEK,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,QAAf;AAAyBC,MAAAA,IAAzB;AAA+BC,MAAAA;AAA/B,QAAsCV,OAAO,CAACW,IAAnD;AAEA,UAAMC,EAAE,GAAGhB,MAAM,CAACiB,WAAP,CAAmB,CAAnB,EAAsBC,QAAtB,CAA+B,KAA/B,CAAX;AAEA,UAAMpB,UAAU,CAAC,MAAD,CAAV,CAAmBqB,MAAnB,CAA0B;AAC5BH,MAAAA,EAD4B;AAE5BN,MAAAA,IAF4B;AAG5BC,MAAAA,KAH4B;AAI5BC,MAAAA,QAJ4B;AAK5BC,MAAAA,IAL4B;AAM5BC,MAAAA;AAN4B,KAA1B,CAAN;AAUA,WAAOT,QAAQ,CAACG,IAAT,CAAc;AAAEQ,MAAAA;AAAF,KAAd,CAAP;AACH;;AAvBY,CAAjB","sourcesContent":["const connection = require('../database/connections');\nconst crypto = require('crypto');\n\nmodule.exports = {\n    async index (request, response)  {\n\n        const ongs = await connection('ongs').select('*');\n    \n        return response.json(ongs);\n    },\n    async create(request, response) {\n        const{ name, email, whatsapp, city, uf } = request.body;\n\n        const id = crypto.randomBytes(4).toString('HEX');\n\n        await connection('ongs').insert({\n            id,\n            name,\n            email,\n            whatsapp,\n            city,\n            uf,\n        })\n\n    \n        return response.json({ id });\n    }\n\n};"]},"metadata":{},"sourceType":"module"}