{"ast":null,"code":"const Raw = require('./raw');\n\nclass Ref extends Raw {\n  constructor(client, ref) {\n    super(client);\n    this.ref = ref;\n    this._schema = null;\n    this._alias = null;\n  }\n\n  withSchema(schema) {\n    this._schema = schema;\n    return this;\n  }\n\n  as(alias) {\n    this._alias = alias;\n    return this;\n  }\n\n  toSQL() {\n    const string = this._schema ? `${this._schema}.${this.ref}` : this.ref;\n    const formatter = this.client.formatter(this);\n    const ref = formatter.columnize(string);\n    const sql = this._alias ? `${ref} as ${formatter.wrap(this._alias)}` : ref;\n    this.set(sql, []);\n    return super.toSQL(...arguments);\n  }\n\n}\n\nmodule.exports = Ref;","map":{"version":3,"sources":["/home/rosiane/back/node_modules/knex/lib/ref.js"],"names":["Raw","require","Ref","constructor","client","ref","_schema","_alias","withSchema","schema","as","alias","toSQL","string","formatter","columnize","sql","wrap","set","arguments","module","exports"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AAEA,MAAMC,GAAN,SAAkBF,GAAlB,CAAsB;AACpBG,EAAAA,WAAW,CAACC,MAAD,EAASC,GAAT,EAAc;AACvB,UAAMD,MAAN;AAEA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKC,MAAL,GAAc,IAAd;AACD;;AAEDC,EAAAA,UAAU,CAACC,MAAD,EAAS;AACjB,SAAKH,OAAL,GAAeG,MAAf;AAEA,WAAO,IAAP;AACD;;AAEDC,EAAAA,EAAE,CAACC,KAAD,EAAQ;AACR,SAAKJ,MAAL,GAAcI,KAAd;AAEA,WAAO,IAAP;AACD;;AAEDC,EAAAA,KAAK,GAAG;AACN,UAAMC,MAAM,GAAG,KAAKP,OAAL,GAAgB,GAAE,KAAKA,OAAQ,IAAG,KAAKD,GAAI,EAA3C,GAA+C,KAAKA,GAAnE;AAEA,UAAMS,SAAS,GAAG,KAAKV,MAAL,CAAYU,SAAZ,CAAsB,IAAtB,CAAlB;AAEA,UAAMT,GAAG,GAAGS,SAAS,CAACC,SAAV,CAAoBF,MAApB,CAAZ;AAEA,UAAMG,GAAG,GAAG,KAAKT,MAAL,GAAe,GAAEF,GAAI,OAAMS,SAAS,CAACG,IAAV,CAAe,KAAKV,MAApB,CAA4B,EAAvD,GAA2DF,GAAvE;AAEA,SAAKa,GAAL,CAASF,GAAT,EAAc,EAAd;AAEA,WAAO,MAAMJ,KAAN,CAAY,GAAGO,SAAf,CAAP;AACD;;AAjCmB;;AAoCtBC,MAAM,CAACC,OAAP,GAAiBnB,GAAjB","sourcesContent":["const Raw = require('./raw');\n\nclass Ref extends Raw {\n  constructor(client, ref) {\n    super(client);\n\n    this.ref = ref;\n    this._schema = null;\n    this._alias = null;\n  }\n\n  withSchema(schema) {\n    this._schema = schema;\n\n    return this;\n  }\n\n  as(alias) {\n    this._alias = alias;\n\n    return this;\n  }\n\n  toSQL() {\n    const string = this._schema ? `${this._schema}.${this.ref}` : this.ref;\n\n    const formatter = this.client.formatter(this);\n\n    const ref = formatter.columnize(string);\n\n    const sql = this._alias ? `${ref} as ${formatter.wrap(this._alias)}` : ref;\n\n    this.set(sql, []);\n\n    return super.toSQL(...arguments);\n  }\n}\n\nmodule.exports = Ref;\n"]},"metadata":{},"sourceType":"script"}