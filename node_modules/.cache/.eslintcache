[{"/home/rosiane/Projeto-completo/back/src/index.js":"1","/home/rosiane/Projeto-completo/back/src/routes.js":"2","/home/rosiane/Projeto-completo/back/src/controllers/OngsControllers.js":"3","/home/rosiane/Projeto-completo/back/src/controllers/ProfilleController.js":"4","/home/rosiane/Projeto-completo/back/src/controllers/IncidentController.js":"5","/home/rosiane/Projeto-completo/back/src/controllers/SessionController.js":"6","/home/rosiane/Projeto-completo/back/src/database/connections.js":"7","/home/rosiane/Projeto-completo/back/src/knexfile.js":"8"},{"size":264,"mtime":1624913160053,"results":"9","hashOfConfig":"10"},{"size":739,"mtime":1624911379883,"results":"11","hashOfConfig":"10"},{"size":634,"mtime":1624905890780,"results":"12","hashOfConfig":"10"},{"size":373,"mtime":1624911081965,"results":"13","hashOfConfig":"10"},{"size":1552,"mtime":1624912981173,"results":"14","hashOfConfig":"10"},{"size":468,"mtime":1624911857035,"results":"15","hashOfConfig":"10"},{"size":158,"mtime":1624981558838,"results":"16","hashOfConfig":"10"},{"size":789,"mtime":1624981367509,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lpfwks",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rosiane/Projeto-completo/back/src/index.js",[],"/home/rosiane/Projeto-completo/back/src/routes.js",[],"/home/rosiane/Projeto-completo/back/src/controllers/OngsControllers.js",[],"/home/rosiane/Projeto-completo/back/src/controllers/ProfilleController.js",["37"],"const connection = require(\"../database/connections\");\nconst  {index} = require(\"./OngsControllers\");\n\nmodule.exports = {\n    async index(request, response){\n        const ong_id = request.headers.authorization;\n\n        const incidents = await connection('incidents')\n        .where('ong_id', ong_id)\n        .select('*');\n\n        return response.json(incidents);\n    }\n}","/home/rosiane/Projeto-completo/back/src/controllers/IncidentController.js",["38","39"],"const connection = require('../database/connections');\nconst {index}  = require('./OngsControllers');\n\nmodule.exports = {\n\n    async index(request, response) {\n        const { page = 1} = request.query;\n\n        const [count] = await connection('incidents').count();\n\n        const incidents = await connection('incidents')\n        .join('ongs','ongs.id', '=', 'incidents.ong_id' )\n        .limit(5)\n        .offset((page -1) * 5)\n        .select(['incidents.*', \n        'ongs.name', \n        'ongs.email', \n        'ongs.whatsapp', \n        'ongs.city', \n        'ongs.uf']); \n\n        response.header('X-Total-Count', count['count(*)']);\n\n        return response.json(incidents);\n    },\n    async create(request, response){\n        const { title, description, value} = request.body;\n        const ong_id = request.headers.authorization;\n\n        const [id] = await connection ('incidents').insert({\n            title,\n            description,\n            value,\n            ong_id,\n        });\n        return response.json({ id });\n    },\n    async delete(request, response){\n        const { id } = request.params;\n        const ong_id = request.headers.authorization;\n\n        const incident = await connection('incidents')\n        .where('id', id)\n        .select('ong_id')\n        .first();\n\n        if (incident.ong_id != ong_id) {\n            return response.status(401).json({ error: 'Operation not permitted.'});\n\n        }\n        await connection('incidents').where('id', id).delete();\n\n        return response.status(204).send();\n\n    }\n};","/home/rosiane/Projeto-completo/back/src/controllers/SessionController.js",["40"],"const { create } = require(\"./OngsControllers\");\nconst connection = require('../database/connections');\n\nmodule.exports = {\n    async create(request, response){\n        const { id } = request.body;\n\n        const ong = await connection('ongs')\n        .where('id', id)\n        .select('name')\n        .first();\n\n        if(!ong){\n            return response.status(400).json({ error: 'No Ong found with this ID'});\n\n        }\n        return response.json(ong);\n    }\n}","/home/rosiane/Projeto-completo/back/src/database/connections.js",[],"/home/rosiane/Projeto-completo/back/src/knexfile.js",[],{"ruleId":"41","severity":1,"message":"42","line":2,"column":9,"nodeType":"43","messageId":"44","endLine":2,"endColumn":14},{"ruleId":"41","severity":1,"message":"42","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":13},{"ruleId":"45","severity":1,"message":"46","line":47,"column":29,"nodeType":"47","messageId":"48","endLine":47,"endColumn":31},{"ruleId":"41","severity":1,"message":"49","line":1,"column":9,"nodeType":"43","messageId":"44","endLine":1,"endColumn":15},"no-unused-vars","'index' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'create' is assigned a value but never used."]